service: portfolio-backend
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: ap-southeast-2

  environment:
    TABLE_PREFIX: ${self:custom.tablePrefix}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Scan"
          Resource:
            - "arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:custom.tablePrefix}*"
      
package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline # must appear last!

custom:
  tablePrefix: portfolio-${sls:stage}

  serverless-offline:
    httpPort: 8000

  dynamodb:
    stages:
      - dev
    start:
      port: 8080
      migrate: true
      seed: true
      inMemory: true
    seed:
      dev:
        sources:
          - table: ${self:custom.tablePrefix}-about
            sources: [./seed/about.json]
          - table: ${self:custom.tablePrefix}-projects
            sources: [./seed/projects.json]

functions:
  get-blob:
    handler: src/getBlob.handler
    events:
      - httpApi:
          path: /blob
          method: get

resources:
  Resources:
    aboutTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tablePrefix}-about
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    projectsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tablePrefix}-projects
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5